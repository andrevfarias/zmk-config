/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&ht_kp_sk LSHFT LSHIFT>, <&kt CAPSLOCK>;

            tapping-term-ms = <200>;
        };

        ht_kp_sk: ht_kp_sk {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_SK";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        ht_kp_to: ht_kp_to {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_KP_TO";
            bindings = <&kp>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "balanced";
        };

        ht_to_to: ht_to_to {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_TO_TO";
            bindings = <&to>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        to_0 {
            bindings = <&ht_to_to 3 0>;
            key-positions = <37 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC      &kp Q  &kp W  &kp E             &kp R                 &kp T        &kp Y    &kp U             &kp I          &kp O    &kp P     &kp BSPC
&kp TAB      &kp A  &kp S  &kp D             &kp F                 &kp G        &kp H    &kp J             &kp K          &kp L    &kp SEMI  &kp SQT
&shift_caps  &kp Z  &kp X  &kp C             &kp V                 &kp B        &kp N    &kp M             &kp COMMA      &kp DOT  &kp FSLH  &shift_caps
                           &kp LEFT_CONTROL  &ht_kp_to LEFT_ALT 1  &kp SPACE    &kp RET  &ht_kp_to RALT 2  &kp RIGHT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1      &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&trans  &trans      &trans        &trans        &trans        &trans          &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &trans    &trans    &trans  &trans     &trans  &trans
                                  &trans        &trans        &kp SPACE       &kp RET   &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                          &trans    &trans    &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6       &kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans       &trans     &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans       &trans     &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &kp SPACE    &kp ENTER  &trans  &trans
            >;
        };
    };
};
